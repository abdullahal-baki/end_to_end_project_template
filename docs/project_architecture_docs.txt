
## Before Make the Commit Run: pre-commit run --all-files


---------------------project architecture documentation--------------------

my_sample_project/
├── .github/                    # GitHub workflows for CI/CD
│   └── workflows/
│       ├── ci.yml              # CI pipeline
│       └── cd.yml              # CD pipeline (deploy)
├── docs/                        # Project documentation
│   └── index.md
├── src/                        # Source code
│   └── my_sample_project/
│       ├── __init__.py
│       ├── main.py
│       └── utils.py
├── tests/                       # Unit & integration tests
│   ├── __init__.py
│   ├── test_main.py
│   └── test_utils.py
├── scripts/                     # Utility scripts
│   └── setup_env.sh
├── .gitignore
├── .pre-commit-config.yaml      # Pre-commit hooks
├── pyproject.toml               # Build system and dependency info
├── setup.cfg                    # Linter, formatter configs
├── requirements.txt
├── README.md
└── LICENSE
--------------------------------------------------------------------------

====================
Tests ফোল্ডার স্ট্রাকচার
====================
 - tests ফোল্ডার প্রোজেক্ট root এ রাখবেন।

 - প্রত্যেকটি source file এর জন্য একটি test file বানাবেন।
    উদাহরণ: utils.py → test_utils.py
             main.py → test_main.py

 - test ফাইলের নাম test_*.py হতে হবে, কারণ pytest এই নামের ফাইল খুঁজে নেয়।

 - test ফাংশনের নাম test_* দিয়ে শুরু হতে হবে।

=====================================
Linter & Formatter Config (setup.cfg)
=====================================
এটা কি:

  - Linter → কোডের ভুল বা স্টাইল সমস্যা চেক করে। (যেমন flake8)

  - Formatter → কোড স্বয়ংক্রিয়ভাবে সুন্দরভাবে ফরম্যাট করে। (যেমন black)


===========================================
Pre-commit Hooks (.pre-commit-config.yaml)
===========================================

এটা কি:

  - Git এ commit করার আগে স্বয়ংক্রিয়ভাবে কোড চেক করে।

  - যেমন ফরম্যাট ঠিক আছে কিনা, লিন্টে সমস্যা আছে কিনা।
